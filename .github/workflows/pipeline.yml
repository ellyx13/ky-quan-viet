name: CI/CD Pipeline

on:
  push:
    branches: ["feature/cicd"]
jobs:
  test:
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Creating .env file
        run: |
          mkdir -p .env
          echo "ENVIRONMENT=$ENVIRONMENT" > .env/test.env
          echo "DATABASE_URL=$DATABASE_URL" >> .env/test.env
          echo "APP_DATABASE_NAME=$APP_DATABASE_NAME" >> .env/dev.env
          echo "SECRET_KEY=$SECRET_KEY" >> .env/dev.env
          echo "ALGORITHM=$ALGORITHM" >> .env/dev.env
          echo "DEFAULT_ADMIN_EMAIL=$DEFAULT_ADMIN_EMAIL" >> .env/dev.env
          echo "DEFAULT_ADMIN_PASSWORD=$DEFAULT_ADMIN_PASSWORD" >> .env/dev.env
        shell: bash
        env:
          ENVIRONMENT: ${{ env.ENVIRONMENT }}
          APP_DATABASE_NAME: ${{ env.APP_DATABASE_NAME }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALGORITHM: ${{ secrets.ALGORITHM }}
          DEFAULT_ADMIN_EMAIL: ${{ secrets.DEFAULT_ADMIN_EMAIL }}
          DEFAULT_ADMIN_PASSWORD: ${{ secrets.DEFAULT_ADMIN_PASSWORD }}

      - name: "Run tests"
        run: chmod +x bin/linux/test.sh && ./bin/linux/test.sh

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME_DOCKER_HUB }}
          password: ${{ secrets.PASSWORD_DOCKER_HUB }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: ./app/Dockerfile
          push: true
          tags: ${{ secrets.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    env:
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      APP_DATABASE_NAME:  ${{ secrets.APP_DATABASE_NAME }}
      PROJECT_PATH:  ${{ secrets.PROJECT_PATH }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      DEFAULT_ADMIN_EMAIL: ${{ secrets.DEFAULT_ADMIN_EMAIL }}
      DEFAULT_ADMIN_PASSWORD: ${{ secrets.DEFAULT_ADMIN_PASSWORD }}
      USERNAME_DATABASE: ${{ secrets.USERNAME_DATABASE }}
      PASSWORD_DATABASE: ${{ secrets.PASSWORD_DATABASE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create env file
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.USERNAME_SERVER }}
          key: ${{ secrets.PRIVATE_KEY_SERVER }}
          port: ${{ secrets.PORT_SERVER }}
          script: |
            cd "$PROJECT_PATH"
            mkdir -p .env
            echo > .env/prod.env
            echo > .env/db.prod.env
            echo "ENVIRONMENT=$ENVIRONMENT" > .env/prod.env
            echo "DATABASE_URL=$DATABASE_URL" >> .env/prod.env
            echo "APP_DATABASE_NAME=$APP_DATABASE_NAME" >> .env/prod.env
            echo "SECRET_KEY=$SECRET_KEY" >> .env/prod.env
            echo "ALGORITHM=$ALGORITHM" >> .env/prod.env
            echo "DEFAULT_ADMIN_EMAIL=$DEFAULT_ADMIN_EMAIL" >> .env/prod.env
            echo "DEFAULT_ADMIN_PASSWORD=$DEFAULT_ADMIN_PASSWORD" >> .env/prod.env
            echo "MONGO_INITDB_ROOT_USERNAME=$USERNAME_DATABASE" >> .env/db.prod.env
            echo "MONGO_INITDB_ROOT_PASSWORD=$PASSWORD_DATABASE" >> .env/db.prod.env
          envs: ENVIRONMENT, APP_DATABASE_NAME, DATABASE_URL, SECRET_KEY, ALGORITHM, DEFAULT_ADMIN_EMAIL, DEFAULT_ADMIN_PASSWORD, USERNAME_DATABASE, PASSWORD_DATABASE, PROJECT_PATH

      - name: Copy file deploy
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.USERNAME_SERVER }}
          key: ${{ secrets.PRIVATE_KEY_SERVER }}
          port: ${{ secrets.PORT_SERVER }}
          source: "docker-compose-prod.yml"
          target: ${{ env.PROJECT_PATH }}

      - name: Deploy API
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.USERNAME_SERVER }}
          key: ${{ secrets.PRIVATE_KEY_SERVER }}
          port: ${{ secrets.PORT_SERVER }}
          script: |
            cd ${{ env.PROJECT_PATH }}
            docker login -u ${{ secrets.USERNAME_DOCKER_HUB }} -p ${{ secrets.PASSWORD_DOCKER_HUB }}
            mv docker-compose-prod.yml docker-compose.yml
            docker compose pull api
            docker compose up -d api